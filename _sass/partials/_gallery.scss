//
// Photo gallery
//
.gallery {
  @extend .media;

  // bottom caption
  figcaption {
    @extend .caption;
    flex-basis: 100%;
  }
}

//
// Gallery photos
//
.photo {
  display: block;
  overflow: hidden;
  position: relative;
  z-index: 100;
  transition: transform .25s ease-in-out;

  img {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  // Captions on hover/tap
  &[data-comment] {
    &::after {
      font-size: .66em;
      content: attr(data-comment);
      color: white;
      background: rgba(0, 0, 0, .66);

      display: block;
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      padding: 1em;
      transform: translateY(100%);
      transition: transform .33333s ease-in-out;
    }

    // Display comment on hover or when photo is selected
    &:hover::after,
    &.photo--caption::after {
      transform: translateY(0);
    }
  }
}

//
// LAYOUT: tall
//
.tall {

  // all photos
  .photo {
    float: left;
    width: 98%;
    margin-bottom: 4%;
    margin-right: 1%;
    margin-left: 1%;

    @media (min-width: 500px) {
      width: 48%;
      padding-bottom: calc(100% / 3);
      margin-bottom: 2%;
    }
  }

  // special treatment for tall photos
  .tall {
    padding-bottom: 103.9%;
    object-position: 25% 0;
  }

  //
  // wide photos
  //
  .photo.wide {
    float: none;
    clear: both;
    width: 98%;
    object-position: 50% calc(100% / 3);
  }
}

//
// LAYOUT: all flex-box grids
//
.grid-flex {
  display: flex;
  flex-flow: row wrap;

  .photo {
    margin: 0 1% 2%;

    // Be default pictures show up in grid format. This forces linear layout on
    // smaller screens. It's not mobile-first because I can keep it to only one
    // !important by doing it this way, and the stuff that supports flexbox is
    // almost guaranteed to support media queries.
    @media (max-width: 500px) {
      flex-basis: 98% !important;
      padding-bottom: 95%;
    }
  }
}

//
// LAYOUT: flex-box 2-col
//
.flex-2 {
  @extend .grid-flex;

  // Set number of cols + height
  .photo {
    flex: 1 0 48%;
    padding-bottom: 50%;
  }
}

//
// LAYOUT: flex-box 3-col
//
.flex-3 {
  @extend .grid-flex;

  // Set number of cols + height
  .photo {
    flex: 1 0 31%;
    padding-bottom: 33%;
  }
}

//
// Define some class-based overrides after all default gallery styles.
// If these styles are declared before the gallery gridtypes, then the
// default flex-basis for each grid will be set.
//
.photo {
  &.wide { //               N         N
    flex-basis: calc(100% / 1 - (2% * 1));
    padding-bottom: calc(100% / 3);
  }

  &.half { //               N         N-1 ¯\_(ツ)_/¯
    flex-basis: calc(100% / 2 - (2% * 1));
  }

  &.third { //              N         N
    flex-basis: calc(100% / 3 - (2% * 3));
  }

  &.fourth { //             N         N
    flex-basis: calc(100% / 4 - (2% * 4));
    padding-bottom: 25%;
  }
}
